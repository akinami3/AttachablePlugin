<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="two_wheel_robot_with_caster">

  <!-- ==================== -->
  <!-- Parameter Definitions -->
  <!-- ==================== -->

  <xacro:property name="base_length"     value="0.25"/>
  <xacro:property name="base_width"      value="0.2"/>
  <xacro:property name="base_height"     value="0.1"/>

  <xacro:property name="wheel_radius"    value="0.08"/>
  <xacro:property name="wheel_width"     value="0.03"/>
  <xacro:property name="wheel_x"       value="${-base_length/2 + wheel_radius}"/> <!-- Align the edge of base_link with the edge of the caster -->
  <xacro:property name="wheel_y"       value="${base_width/2 + wheel_width/2}"/> <!-- Position the wheel directly beside base_link -->
  <xacro:property name="wheel_z"       value="0.0"/> <!-- Position the wheel directly above base_link -->

  <xacro:property name="caster_radius"   value="${(wheel_radius - base_height/2)/2}"/> <!-- Fit snugly in the gap below base_link -->
  <xacro:property name="caster_width"   value="0.01"/>
  <xacro:property name="caster_x" value="${base_length/2 - caster_radius}"/> <!-- Align the edge of base_link with the edge of the caster -->
  <xacro:property name="caster_y" value="0"/> 
  <xacro:property name="caster_z" value="${- base_height/2 - caster_radius}"/>  <!-- Fit snugly in the gap below base_link -->

  <!-- ==================== -->
  <!-- Material Definitions -->
  <!-- ==================== -->
  <material name="gray">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="red">
    <color rgba="1.0 0.0 0.0 1.0"/>
  </material>

  <!-- ==================== -->
  <!-- Link Definitions -->
  <!-- ==================== -->

  <!-- Base Link -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 ${-base_height/2}" rpy="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001"/>
    </inertial>
  </link>

  <!-- Left Wheel Link -->
  <link name="left_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="-1.5708 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="-1.5708 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09" iyy="1.1192413e-05" iyz="-1.4400107e-11" izz="2.0712558e-05" />
    </inertial>
  </link>

  <!-- Right Wheel Link -->
  <link name="right_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="1.5708 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09" iyy="1.1192413e-05" iyz="-1.4400107e-11" izz="2.0712558e-05" />
    </inertial>
  </link>

  <!-- Caster Link -->
  <link name="caster_wheel_link">
    <visual>
      <origin xyz="0 0 0" rpy="-1.5708 0 0"/>
      <geometry>
        <cylinder length="${caster_width}" radius="${caster_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="-1.5708 0 0"/>
      <geometry>
        <cylinder length="${caster_width}" radius="${caster_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
    </inertial>
  </link>

  <!-- ==================== -->
  <!-- Joint Definitions -->
  <!-- ==================== -->

  <!-- Left Wheel Joint -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child  link="left_wheel_link"/>
    <origin xyz="${wheel_x} ${wheel_y} ${wheel_z}" rpy="0 0 0"/>
    <axis   xyz="0 1 0"/>
  </joint>

  <!-- Right Wheel Joint -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child  link="right_wheel_link"/>
    <origin xyz="${wheel_x} ${-wheel_y} ${wheel_z}" rpy="0 0 0"/>
    <axis   xyz="0 1 0"/>
  </joint>

  <!-- Caster Joint -->
  <joint name="caster_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child  link="caster_wheel_link"/>
    <origin xyz="${caster_x} ${caster_y} ${caster_z}" rpy="0 0 0"/>
    <axis   xyz="0 1 0"/>
  </joint>

  <!-- ==================== -->
  <!-- Gazebo Plugins -->
  <!-- ==================== -->
  <gazebo>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <topic>/cmd_vel</topic>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>${base_width+wheel_width}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <odom_topic>odom</odom_topic>
      <tf_topic>tf</tf_topic>
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>
      <odom_publish_frequency>50</odom_publish_frequency>
    </plugin>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
      <topic>joint_states</topic>
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>right_wheel_joint</joint_name>
    </plugin>
  </gazebo>

</robot>
